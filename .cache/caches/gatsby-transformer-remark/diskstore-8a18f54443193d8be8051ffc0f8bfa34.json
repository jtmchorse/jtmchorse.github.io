{"expireTime":9007200828310069000,"key":"transformer-remark-markdown-html-246698621b157865239bb108af773c26--","val":"<h3>Gatsby-node slugs</h3>\n<p>Continuing our path of following Gatsbyjs.orgs tutorials, we create the paths for the new posts. Just checkout <a href=\"/day17\">Day 17</a>.</p>\n<p>But to give an another overiew, since we're already here. We once again find ourselves in the <code>gatsby-node.js</code> file. I'll be using Day 17 as a reference, since the Udemy course is \"paid content\" and so on..</p>\n<p>Lets start at the beginning, again.</p>\n<p>We'll need to import things, like always.</p>\n<p>First off, we'll need to set a var for our path plugin. <code>const path = require(<code>path\\</code>)</code></p>\n<p>We'll also need to requite the gatsby-source-filesystem plugin we have. Same story, const that out.</p>\n<p><code>const { createFilePath } = require(<code>gatsby-source-filesystem</code>)</code></p>\n<p><img src=\"/Day26-GatsbyNodejs.png\" alt=\"gatsby nodejs imports\"></p>\n<p>Lets try and start unpacking this next exports function. What is this <code>onCreateNode</code> thing anyway? Good question, lets start digging => to the docs! <a href=\"https://www.gatsbyjs.org/docs/node-apis/#createNode\">OnCreateNode</a> and we get \"Create a new node\". Useful, but not terribly descriptive for those of us who might be lacking a little on the React side of knowledge gathering. If we scroll up to the top of the Actions page, we'll get a much more interesting block of text. </p>\n<p><code>Gatsby uses Redux internally to manage state. When you implement a Gatsby API, you are passed a collection of actions (equivalent to boundActionCreators in redux) which you can use to manipulate state on your site.</code></p>"}